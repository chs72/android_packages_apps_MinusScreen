plugins {
    alias(libs.plugins.androidApplication)
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    namespace 'com.okcaros.minusscreen'
    compileSdk 33

    defaultConfig {
        applicationId "com.okcaros.minusscreen"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    final def keystorePropertiesFile = rootProject.file("keystore.properties")
    def releaseSigning = signingConfigs.debug
    if (keystorePropertiesFile.exists()) {
        final def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        releaseSigning = signingConfigs.create("release") {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile rootProject.file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    applicationVariants.configureEach { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.configureEach {
                outputFileName = "minusscreen.apk"
            }
        }
    }

    buildFeatures {
        aidl true
    }

    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig releaseSigning
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
            kotlinOptions.jvmTarget = "1.8"
        }
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.preference
    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.espresso.core

    implementation libs.fastjson

    implementation libs.rxandroid
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)
    implementation libs.rxjava

    implementation libs.retrofit
    implementation libs.adapter.rxjava3
    implementation libs.okhttp
    implementation(libs.logging.interceptor)

    implementation libs.logger

    implementation(libs.eventbus)

    implementation libs.hilt.android
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
}